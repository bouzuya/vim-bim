scriptencoding utf-8

let s:save_cpoptions = &cpoptions
set cpoptions&vim

function! s:test1()
  let o = bim#raw#new()
  call o.input('a')
  call bim#assert#are_equal('a', o.raw())
  call bim#assert#are_equal('a', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(0, o.is_okuri())
  call o.input('i')
  call bim#assert#are_equal('ai', o.raw())
  call bim#assert#are_equal('ai', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(0, o.is_okuri())
  call o.input_okuri()
  call bim#assert#are_equal('ai', o.raw())
  call bim#assert#are_equal('ai', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(1, o.is_okuri())
  call o.input('s')
  call bim#assert#are_equal('ais', o.raw())
  call bim#assert#are_equal('ai', o.yomi())
  call bim#assert#are_equal('s', o.okuri())
  call bim#assert#are_equal(1, o.is_okuri())
  call o.input('a')
  call bim#assert#are_equal('aisa', o.raw())
  call bim#assert#are_equal('ai', o.yomi())
  call bim#assert#are_equal('sa', o.okuri())
  call bim#assert#are_equal(1, o.is_okuri())
endfunction

function! s:test2()
  let o = bim#raw#new()
  call o.input('a')
  call o.input('i')
  call o.input_backspace()
  call bim#assert#are_equal('a', o.raw())
  call bim#assert#are_equal('a', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(0, o.is_okuri())
  call o.input_okuri()
  call bim#assert#are_equal('a', o.raw())
  call bim#assert#are_equal('a', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(1, o.is_okuri())
  call o.input('i')
  call bim#assert#are_equal('ai', o.raw())
  call bim#assert#are_equal('a', o.yomi())
  call bim#assert#are_equal('i', o.okuri())
  call bim#assert#are_equal(1, o.is_okuri())
  call o.input_backspace()
  call bim#assert#are_equal('a', o.raw())
  call bim#assert#are_equal('a', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(1, o.is_okuri())
  call o.input_backspace()
  call bim#assert#are_equal('a', o.raw())
  call bim#assert#are_equal('a', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(0, o.is_okuri())
endfunction

function! s:test3()
  let o = bim#raw#new()
  call o.input_okuri()
  call bim#assert#are_equal('', o.raw())
  call bim#assert#are_equal('', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(0, o.is_okuri())
  call o.input_backspace()
  call bim#assert#are_equal('', o.raw())
  call bim#assert#are_equal('', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(0, o.is_okuri())
endfunction

function! s:test()
  call s:test1()
  call s:test2()
  call s:test3()
endfunction

function! s:test7()
  let o = bim#raw#new()
  call o.input('a')
  call o.input('i')
  call o.input_okuri()
  call o.input('s')
  call o.input('a')
  call o.input_backspace()
  call o.input_backspace()
  call bim#assert#are_equal('ai', o.yomi())
  call bim#assert#are_equal('', o.okuri())
  call bim#assert#are_equal(1, o.is_okuri())
endfunction
call s:test()

let &cpoptions = s:save_cpoptions
unlet! s:save_cpoptions

